generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model club {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?       @db.VarChar(255)
  image       String?       @db.VarChar(255)
  name        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  user_id     String        @db.Uuid
  tenant_id   String        @db.VarChar(255)
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  poker_match poker_match[]
}

model match_result {
  id             String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  poker_match_id String      @db.Uuid
  player_id      String      @db.Uuid
  result         String      @db.VarChar(255)
  created_at     DateTime    @default(now()) @db.Timestamp(6)
  updated_at     DateTime    @default(now()) @db.Timestamp(6)
  user           user        @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  poker_match    poker_match @relation(fields: [poker_match_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model poker_match {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date_time    DateTime       @db.Timestamp(6)
  club_id      String         @db.Uuid
  host_id      String         @db.Uuid
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  match_result match_result[]
  club         club           @relation(fields: [club_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user           @relation(fields: [host_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rsvp         rsvp[]
}

model rsvp {
  id             String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String      @db.Uuid
  poker_match_id String      @db.Uuid
  status         String      @db.VarChar(255)
  created_at     DateTime    @default(now()) @db.Timestamp(6)
  updated_at     DateTime    @default(now()) @db.Timestamp(6)
  poker_match    poker_match @relation(fields: [poker_match_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  club         club[]
  match_result match_result[]
  poker_match  poker_match[]
  rsvp         rsvp[]
}
